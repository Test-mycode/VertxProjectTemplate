plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.70'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

group 'com.pqitech.GradleExp'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    maven { url 'https://maven.aliyun.com/repository/public' }
    maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots'
        mavenContent {
            snapshotsOnly()
        }
    }
    mavenCentral()
}

ext {
    kotlinVersion = '1.3.70'
    vertxVersion = '4.0.0-SNAPSHOT'
    junitJupiterEngineVersion = '5.4.0'
    log4jVerion = '2.13.1'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
  // 加载本地的 jar，放在libs目录的
    implementation fileTree(dir: 'libs', includes: ['*.jar'])
  //vertx kotlin扩展
    implementation "io.vertx:vertx-lang-kotlin:$vertxVersion"
    implementation "io.vertx:vertx-web-client:$vertxVersion"
    implementation "io.vertx:vertx-web:$vertxVersion"
    implementation "io.vertx:vertx-lang-kotlin-coroutines:$vertxVersion"
//  implementation "io.vertx:vertx-pg-client:$vertxVersion"
//  implementation "io.vertx:vertx-mysql-client:$vertxVersion"

//    implementation "io.vertx:vertx-service-proxy:$vertxVersion"
//    implementation "io.vertx:vertx-amqp-client:$vertxVersion"
//    implementation "io.vertx:vertx-health-check:$vertxVersion"
//    implementation "io.vertx:vertx-service-discovery:$vertxVersion"
//    implementation "io.vertx:vertx-hazelcast:$vertxVersion"
//    implementation "io.vertx:vertx-auth-oauth2:$vertxVersion"
//    implementation "io.vertx:vertx-tcp-eventbus-bridge:$vertxVersion"
//    implementation "io.vertx:vertx-sockjs-service-proxy:$vertxVersion"

// JDBC 依赖
//    implementation "io.vertx:vertx-jdbc-client:$vertxVersion"
// PGSQL jdbc需要以来的驱动
//  implementation "org.postgresql:postgresql:42.2.12"

//    implementation "io.vertx:vertx-service-factory:$vertxVersion"
// Monogo 依赖
//    implementation "io.vertx:vertx-mongo-client:$vertxVersion"
//    implementation "io.vertx:vertx-amqp-bridge:$vertxVersion"
//    implementation "io.vertx:vertx-zookeeper:$vertxVersion"
//    implementation "io.vertx:vertx-grpc:$vertxVersion"
//    implementation "io.vertx:vertx-http-service-factory:$vertxVersion"
//    implementation "io.vertx:vertx-web-api-contract:$vertxVersion"
// Monogo 依赖
//    implementation "io.vertx:vertx-redis-client:$vertxVersion"
//    implementation "io.vertx:vertx-mqtt:$vertxVersion"
//    implementation "io.vertx:vertx-config:$vertxVersion"
//    implementation "io.vertx:vertx-web-graphql:$vertxVersion"
//    implementation "io.vertx:vertx-cassandra-client:$vertxVersion"
//    implementation "io.vertx:vertx-circuit-breaker:$vertxVersion"
//    implementation "io.vertx:vertx-mail-client:$vertxVersion"
//    implementation "io.vertx:vertx-consul-client:$vertxVersion"
//    implementation "io.vertx:vertx-rabbitmq-client:$vertxVersion"
//    implementation "io.vertx:vertx-kafka-client:$vertxVersion"


  implementation "org.apache.logging.log4j:log4j-api:$log4jVerion"
  implementation "org.apache.logging.log4j:log4j-jcl:$log4jVerion"
  implementation "org.apache.logging.log4j:log4j-core:$log4jVerion"
  implementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVerion"
  implementation "org.slf4j:slf4j-api:1.7.30"
    testImplementation "io.vertx:vertx-junit5:$vertxVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"
}

application {
  mainClassName = 'com.pqitech.app.AppMain'
}


compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

shadowJar {
    zip64(true)

  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }

}
